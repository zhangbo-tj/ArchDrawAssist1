#pragma once
#include "G3DDataType.h"

enum EnrollMode{
	Cylinder = 0,
	ConicalFrustum = 1,
};

//////////////////////////////////////////////////////////////////////////
//@intro	Slice Bounding Box类，用于在GLModelArea中交互式选择slice的展开方式
//////////////////////////////////////////////////////////////////////////
class SliceBBox{
private:
	float minPt[3],maxPt[3];	//bounding box的上下界
	EnrollMode enrollMode;	//Slice Bounding Box的展开方式

public:

	//////////////////////////////////////////////////////////////////////////
	//@intro	SliceBBox的默认构造器
	//////////////////////////////////////////////////////////////////////////
	SliceBBox();

	//////////////////////////////////////////////////////////////////////////
	//@intro	SliceBBox构造器
	//@param	min,max:bouding box的上下界
	//////////////////////////////////////////////////////////////////////////
	SliceBBox(float min[3],float max[3]);

	//////////////////////////////////////////////////////////////////////////
	//@intro	SliceBBox构造器
	//@param	min,max:bounding box的上界和下界
	//@param	mode:sliceBox的展开方式
	//////////////////////////////////////////////////////////////////////////
	SliceBBox(float min[3],float max[3],EnrollMode mode);

	//////////////////////////////////////////////////////////////////////////
	//@intro	SliceBBox构造器
	//@param	min,max: slice bouding box 的x和z的下界和上界
	//@param	lowerVertexOnAxis:slice上的点在对称轴上投影的下界
	//@param	higherVertexOnAxis:slice上的点在对称轴上投影的上界
	//////////////////////////////////////////////////////////////////////////
	SliceBBox(float min[3],float max[3], Vertex lowerVertexOnAxis,Vertex higherVertexOnAxis);


	//////////////////////////////////////////////////////////////////////////
	//@intro	设置bounding box的下界
	//@param	bounding box的下界
	//////////////////////////////////////////////////////////////////////////
	void setMin(float min[3]);
	

	//////////////////////////////////////////////////////////////////////////
	//@intro	设置bounding box的下界
	//@param	lowerVertexOnAxis:bounding box的下截面在对称轴上的投影
	//////////////////////////////////////////////////////////////////////////
	void setMin(Vertex lowerVertexOnAxis);

	//////////////////////////////////////////////////////////////////////////
	//@intro	设置bounding box的上界
	//@param	max:bounding box的上界
	//////////////////////////////////////////////////////////////////////////
	void setMax(float max[3]);


	//////////////////////////////////////////////////////////////////////////
	//@intro	设置bounding box的上界
	//@param	higherVertexOnAxis:bounding box的上截面在对称轴上的投影
	//////////////////////////////////////////////////////////////////////////
	void setMax(Vertex higherVertexOnAxis);


	//////////////////////////////////////////////////////////////////////////
	//@intro	设置slice bounding box的展开方式
	//@param	mode:slice bouding box的展开
	//////////////////////////////////////////////////////////////////////////
	void setEnrollMode(EnrollMode mode);


	//////////////////////////////////////////////////////////////////////////
	//@intro	获取slice bounding box的展开方式
	//@return	slice bouding box的展开方式
	//////////////////////////////////////////////////////////////////////////
	EnrollMode getEnrollMode();


	//////////////////////////////////////////////////////////////////////////
	//@intro	获取Bounding Box的下界
	//////////////////////////////////////////////////////////////////////////
	float* getMinBounding();


	//////////////////////////////////////////////////////////////////////////
	//@intro	获取Bounding Box的上界
	//////////////////////////////////////////////////////////////////////////
	float* getMaxBounding();


	//////////////////////////////////////////////////////////////////////////
	//@intro	判断点是否在Bounding Box内
	//@param	x,y,z:点的三维坐标
	//////////////////////////////////////////////////////////////////////////
	bool isPointInBBox(double x,double y,double z);

	//////////////////////////////////////////////////////////////////////////
	//@intro	将展开模式设置为圆柱
	//  [4/10/2016 zhangbo]
	//////////////////////////////////////////////////////////////////////////
	void setCylinderMode();

	//////////////////////////////////////////////////////////////////////////
	//@intro	将展开模式设置为圆台
	//	[4/10/2016 zhangbo]
	//////////////////////////////////////////////////////////////////////////
	void setTruncatedConeMode();

	//////////////////////////////////////////////////////////////////////////
	//@intro	判断当前Slice的展开方式是否是圆柱
	//  [4/10/2016 zhangbo]
	//////////////////////////////////////////////////////////////////////////
	bool isCylinderMode();

	//////////////////////////////////////////////////////////////////////////
	//@intro	判断当前slice 的展开方式是否为圆台
	//  [4/10/2016 zhangbo]
	//////////////////////////////////////////////////////////////////////////
	bool isTrunConeMode();
};

